#Varriables across(between) stages from parametrs
#https://arunksingh16.medium.com/azure-devops-share-variable-across-stages-9bca85abfe8a
#https://learn.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch
#https://erwinstaal.nl/posts/azure-devops-multistage-pass-variables/

#Output variables are still produced by steps inside of jobs.
#in previous Stage.Job.task need use vso like  echo "##vso[task.setvariable variable=VarKey;isOutput=true]$(VarStage1A)"  
#Instead of referring to dependencies.jobName.outputs['stepName.variableName'],
#stages refer to stageDependencies.stageName.jobName.outputs['stepName.variableName'].

trigger:
  batch: true  #when a pipeline is running, the system waits until the run is completed, then starts another run with all changes
  branches:
    include:
    - pipelines
  paths:
    include:
    - pipelines
    exclude:
    - Untrig

resources:
- repo: self

pool: CentOS
#  vmImage: 'ubuntu-latest'

parameters:
  - name: VarParametrsString
    displayName: 'Type of build  VarParametrsString'
    type: string
    default: 'type4def'
    values: ['type1', 'type2', 'type3']

  - name: VarParametrsNumber
    displayName: 'Type of build  VarParametrsNumber'
    type: number
    default: 10

  - name: VarParametrsBoolean
    displayName: 'Type of build  VarParametrsBoolean'
    type: boolean
    default: true

variables:
  - group: buildsENV
  
stages:
##################################################
- stage: Stage1
  variables:
    VarStage1A: ${{parameters.VarParametrsString}}

  displayName: DN-Stage1
  jobs:
  - job: Job1
    displayName: DN-Job1
#    pool: $(poolvar)
    steps:
      - task: Bash@3
        name: Task1J1S1
        displayName: DN-task1-showVariables
        inputs:
          targetType: 'inline'
          script: |
            echo "------Print Var from Parametr------------------"
            echo "VarStage1A  ==  $(VarStage1A)"
            #TASKvAR="$(VarStage1A)"
            #echo "(VarStage1A)   == $(VarStage1A)"
            echo "AZdomain   == $(AZdomain)"
            echo "TenantID   == $(TenantID)"
            echo "##vso[task.setvariable variable=VarKey;isOutput=true]$(VarStage1A)"

- stage: Stage2
  variables:
  - name: VarStage2B 
    value: $[ stageDependencies.Stage1.Job1.outputs['Task1J1S1.VarKey'] ]

  displayName: DN-Stage2
  jobs:
  - job: Job1
    displayName: DN-Job2.1
#    pool: $(poolvar)
    steps:
      - task: Bash@3
        displayName: DN-task2.1.1-showVariables
        inputs:
          targetType: 'inline'
          script: |
            echo "------Print Var from Parametr------------------"
            echo "VarStage2B  ==  $(VarStage2B)"

- stage: Stage3_update_Library_value
  variables:
  - name: VarStage2B 
    value: $[ stageDependencies.Stage1.Job1.outputs['Task1J1S1.VarKey'] ]

  displayName: DN-Stage2
  jobs:
  - job: Job1
    displayName: DN-Job2.1
#    pool: $(poolvar)
    steps:
      - task: Bash@3
        displayName: DN-task2.1.1-showVariables
        inputs:
          targetType: 'inline'
          script: |
            echo "------Print Var from Parametr------------------"
            echo "VarStage2B  ==  $(VarStage2B)"