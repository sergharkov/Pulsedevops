trigger:
  batch: true  #when a pipeline is running, the system waits until the run is completed, then starts another run with all changes
  branches:
    include:
    - 'main'
  paths:
   exclude:
     -  '*'
resources:
- repo: self

pool: CentOS
#  vmImage: 'ubuntu-latest'

variables:
  app: 'app'
  BRANCH: 'itea'
  poolvar: ITEA
  ACRvar: 'ksidopsaks'
  imagerRepo: '$(BRANCH)-$(app)'
  tag: '$(Build.BuildId)'
  NameSpaceDeploy: 'develop'
  URKACR: '$(ACRvar).azurecr.io'
  ACRurlVar: "$(ACRvar).azurecr.io/$(imagerRepo)"

stages:
##################################################
- stage: Stage1
  variables:
  - group: buildsENV
  displayName: Build UI image
  jobs:
  - job: Job1
    displayName: BuildUI
    pool: $(poolvar)
    steps:

    - task: Bash@3
      displayName: DisplayNameTask1
      name: Task1
      inputs:
        targetType: 'inline'
        script: |
          echo "-------------------------------------------------------"
          echo "ACRurlVar                           >>>>   $(ACRurlVar)"
          echo "imagerRepo                          >>>>   $(imagerRepo)"